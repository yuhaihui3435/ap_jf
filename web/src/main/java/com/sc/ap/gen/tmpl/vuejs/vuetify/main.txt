<template>
<v-container>
  <v-dialog v-model="dialog" persistent max-width="500px">
      <v-card >
        <v-card-title>
          <span class="headline">{{title}}</span>
        </v-card-title>
        <v-card-text>
            <v-form v-model="fValid" ref="form" lazy-validation>
                <v-container grid-list-md>
                  <v-layout wrap>
                      #for(col:tbl.genCfgColList)
                        #if((col.configJSON.inputType??''=='text'&&(col.configJSON.addShow??false||col.configJSON.editShow??false)))
                           <v-flex xs12 sm6 md4 v-show="#if(col.configJSON.addShow??false)opt=='add'#end#if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end#if(col.configJSON.editShow??false)opt=='edit'#end">
                              <v-text-field v-model="vo.#(col.col)"  label="#(col.note)" #if(col.configJSON.isRequired??false)required#end
                                  :rules="[
                                  #if(col.configJSON.isRequired??false)rules.required,#end
                                  #if(notBlank(col.configJSON.rule))rules.#(col.configJSON.rule),#end
                                  #if(notBlank(col.configJSON.max??null))#if(col.configJSON.isRequired??false)(v) => !!v#else(v)=>!!!v#end||(v!=undefined&&v.length <= #(col.configJSON.max)) || '最多 #(col.configJSON.max) 字符',#end
                                  #if(notBlank(col.configJSON.min??null))#if(col.configJSON.isRequired??false)(v) => !!v#else(v)=>!!!v#end||(v!=undefined&&v.length >= #(col.configJSON.min))|| '最少 #(col.configJSON.min) 字符',#end
                                  ]"
                                  #if(notBlank(col.configJSON.max??null)):counter="#(col.configJSON.max)"#end>
                              </v-text-field>
                           </v-flex>
                        #end
                        #if((col.configJSON.inputType??''=='textArea')&&(col.configJSON.addShow??false||col.configJSON.editShow??false))
                            <v-flex xs12 sm12 md12 v-show="#if(col.configJSON.addShow??false)opt=='add'#end#if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end#if(col.configJSON.editShow??false)opt=='edit'#end">
                                                      <v-textarea v-model="vo.#(col.col)"  label="#(col.note)" outline #if(col.configJSON.isRequired??false)required#end
                                                          :rules="[
                                                          #if(col.configJSON.isRequired??false)rules.required,#end
                                                          #if(notBlank(col.configJSON.rule))rules.#(col.configJSON.rule),#end
                                                          #if(notBlank(col.configJSON.max??null))#if(col.configJSON.isRequired??false)(v) => !!v#else(v)=>!!!v#end&&v.length <= #(col.configJSON.max) || '最多 #(col.configJSON.max) 字符',#end
                                                          #if(notBlank(col.configJSON.min??null))#if(col.configJSON.isRequired??false)(v) => !!v#else(v)=>!!!v#end&&v.length >= #(col.configJSON.min) || '最少 #(col.configJSON.min) 字符',#end
                                                          ]"
                                                          #if(notBlank(col.configJSON.max??null)):counter="#(col.configJSON.max)"#end>
                                                      </v-textarea>
                            </v-flex>
                        #end
                        #if((col.configJSON.inputType??''=='date')&&(col.configJSON.addShow??false||col.configJSON.editShow??false))
                           <v-flex xs12 sm6 md4 v-show="#if(col.configJSON.addShow??false)opt=='add'#end#if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end#if(col.configJSON.editShow??false)opt=='edit'#end">
                              <v-menu
                                        ref="#(col.col)DateMenu"
                                        :close-on-content-click="false"
                                        v-model="#(col.col)DateMenu"
                                        :return-value.sync="vo.#(col.col)"
                                        :nudge-right="40"
                                        lazy
                                        transition="scale-transition"
                                        offset-y
                                        full-width
                                        max-width="290px"
                                        min-width="290px"
                                      >
                                        <v-text-field
                                          slot="activator"
                                          v-model="vo.#(col.col)"
                                          label="#(col.note)"
                                          #if(col.configJSON.isRequired??false)required#end
                                          prepend-icon="event"
                                          readonly
                                          :rules="[#if(col.configJSON.isRequired??false)rules.required#end]"
                                        ></v-text-field>
                                        <v-date-picker v-model="vo.#(col.col)" locale="zh-cn"  @input="$refs.#(col.col)DateMenu.save(vo.#(col.col))"></v-date-picker>
                                      </v-menu>
                           </v-flex>
                        #end
                        #if((col.configJSON.inputType??''=='time')&&(col.configJSON.addShow??false||col.configJSON.editShow??false))
                             <v-flex xs12 sm6 md4 v-show="#if(col.configJSON.addShow??false)opt=='add'#end#if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end#if(col.configJSON.editShow??false)opt=='edit'#end">
                                                      <v-menu
                                                                ref="#(col.col)TimeMenu"
                                                                :close-on-content-click="false"
                                                                v-model="#(col.col)TimeMenu"
                                                                :return-value.sync="vo.#(col.col)"
                                                                :nudge-right="40"
                                                                lazy
                                                                transition="scale-transition"
                                                                offset-y
                                                                full-width
                                                                max-width="290px"
                                                                min-width="290px"
                                                              >
                                                                <v-text-field
                                                                  slot="activator"
                                                                  v-model="vo.#(col.col)"
                                                                  label="#(col.note)"
                                                                  prepend-icon="access_time"
                                                                  #if(col.configJSON.isRequired??false)required#end
                                                                  readonly
                                                                  :rules="[#if(col.configJSON.isRequired??false)rules.required#end]"
                                                                ></v-text-field>
                                                                <v-time-picker v-model="vo.#(col.col)" locale="zh-cn"  @input="$refs.#(col.col)TimeMenu.save(vo.#(col.col))"></v-time-picker>
                                                              </v-menu>
                             </v-flex>
                        #end

                        #if((col.configJSON.inputType??''=='select')&&(col.configJSON.addShow??false||col.configJSON.editShow??false))
                           <v-flex xs12 sm6 md4 v-show="#if(col.configJSON.addShow??false)opt=='add'#end#if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end#if(col.configJSON.editShow??false)opt=='edit'#end">
                                <v-select :items="#(col.col)SelectData" v-model="vo.#(col.col)" :rules="[#if(col.configJSON.isRequired??false)rules.required#end]" label="#genColLabel(col.note)" #if(col.configJSON.isRequired??false)required#end  item-value="value" item-text="text"></v-select>
                           </v-flex>
                        #end
                        #if((col.configJSON.inputType??''=='radio')&&(col.configJSON.addShow??false||col.configJSON.editShow??false))
                           <v-flex xs12 sm6 md4 v-show="#if(col.configJSON.addShow??false)opt=='add'#end#if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end#if(col.configJSON.editShow??false)opt=='edit'#end">
                                #genColLabel(col.note)<v-radio-group v-model="vo.#(col.col)" row :rules="[#if(col.configJSON.isRequired??false)rules.required#end]" #if(col.configJSON.isRequired??false)required#end> <v-radio v-for="n in #(col.col)RadioData"  :key="n.value" :label="n.text" :value="n.value" ></v-radio></v-radio-group>
                           </v-flex>
                        #end
                        #if((col.configJSON.inputType??''=='checkbox')&&(col.configJSON.addShow??false||col.configJSON.editShow??false))
                           <v-flex xs12 sm6 md4 v-show="#if(col.configJSON.addShow??false)opt=='add'#end#if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end#if(col.configJSON.editShow??false)opt=='edit'#end">
                                #genColLabel(col.note)<v-checkbox v-model="vo.#(col.col)" :rules="[#if(col.configJSON.isRequired??false)rules.required#end]" v-for="n in #(col.col)CheckboxData" #if(col.configJSON.isRequired??false)required#end :label="n.text" :value="n.value"></v-checkbox>
                           </v-flex>
                        #end
                        #if((col.configJSON.inputType??''=='switch')&&(col.configJSON.addShow??false||col.configJSON.editShow??false))
                           <v-flex xs12 sm6 md4 v-show="#if(col.configJSON.addShow??false)opt=='add'#end#if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end#if(col.configJSON.editShow??false)opt=='edit'#end">
                                <v-switch label="#genColLabel(col.note)" v-model="vo.#(col.col)"  #if(col.configJSON.isRequired??false)required#end></v-switch>
                           </v-flex>
                        #end
                        #if((col.configJSON.inputType??''=='slider')&&(col.configJSON.addShow??false||col.configJSON.editShow??false))
                           <v-flex xs12 sm6 md4 v-show="#if(col.configJSON.addShow??false)opt=='add'#end  #if(col.configJSON.addShow??false&&col.configJSON.editShow??false)||#end  #if(col.configJSON.editShow??false)opt=='edit'#end">
                                #(col.note)<v-slider v-model="vo.#(col.col)" thumb-label step="1" #if(col.configJSON.isRequired??false)required#end ticks></v-slider>
                           </v-flex>
                        #end
                      #end
                  </v-layout>
                </v-container>
            </v-form>
        </v-card-text>
        <v-card-actions>
          <v-spacer></v-spacer>
          <v-btn color="error darken-1" flat @click.native="dialog = false">关闭</v-btn>
          <v-btn color="success darken-1" flat @click.native="save" :loading="loading" v-show="opt=='add'" :disabled="loading||!fValid">保存</v-btn>
          <v-btn color="success darken-1" flat @click.native="update" v-show="opt=='edit'" :loading="loading" :disabled="loading||!fValid">保存</v-btn>
        </v-card-actions>
      </v-card>
  </v-dialog>
  <v-dialog v-model="viewDialog" persistent max-width="300px">
        <v-card >
          <v-card-title>
            <span class="headline">查看详细</span>
          </v-card-title>
            <v-divider></v-divider>
                  <v-list dense>
                        #for(col:tbl.genCfgColList)
                          #if(col.configJSON.viewShow??false&&col.configJSON.inputType!='textArea')
                              <v-list-tile>
                              #if(col.configJSON.inputType??''=='select'||col.configJSON.inputType??''=='checkbox'||col.configJSON.inputType??''=='radio')
                                    <v-list-tile-content>#genColLabel(col.note):</v-list-tile-content><v-list-tile-content class="align-end">{{#(tbl.modelName)View.#(col.col)Str}}</v-list-tile-content>
                              #else if(col.configJSON.inputType??''=='date')
                                    <v-list-tile-content>#(col.note):</v-list-tile-content><v-list-tile-content class="align-end">{{#(tbl.modelName)View.#(col.col) | formatDate}}</v-list-tile-content>
                              #else
                                    <v-list-tile-content>#(col.note):</v-list-tile-content><v-list-tile-content class="align-end">{{#(tbl.modelName)View.#(col.col)}}</v-list-tile-content>
                              #end
                             </v-list-tile>

                           #else
                             <v-card >
                                <v-card-title>#(col.note):</v-card-title>
                                  <v-card-text>{{#(tbl.modelName)View.#(col.col)}}</v-card-text>
                             </v-card>
                          #end
                        #end

                  </v-list>

          <v-card-actions>
            <v-spacer></v-spacer>
            <v-btn color="error darken-1" flat @click.native="viewDialog = false">关闭</v-btn>
          </v-card-actions>
        </v-card>
    </v-dialog>
    <v-toolbar color="blue" >
              <v-toolbar-title class="white--text">#(tbl.note)列表</v-toolbar-title>
              <v-divider class="mx-3" inset vertical dark  ></v-divider>
              <v-spacer></v-spacer>
              <v-btn class="blue--text" @click.native="add()">新增<v-icon>add</v-icon></v-btn>
    </v-toolbar>
    <v-card >
              <v-container grid-list-md>
                      <v-layout row wrap>
              #for(col:tbl.genCfgColList)
                   #if((col.configJSON.inputType??''=='text'&&(col.configJSON.equalQuery??false||col.configJSON.likeQuery??false)))
                         <v-flex xs12 sm3 md3>
                            <v-text-field v-model="#(tbl.modelName)Query.#(col.col)"  label="#(col.note)" single-line hide-details ></v-text-field>
                         </v-flex>
                   #end
                   #if((col.configJSON.inputType??''=='date')&&(col.configJSON.dateQuery??false))
                         <v-flex xs12 sm3 md3 >
                              <v-menu ref="#(col.col)QueryBeginDateMenu" :close-on-content-click="false" v-model="#(col.col)QueryBeginDateMenu" :return-value.sync="#(tbl.modelName)Query.begin#(firstCharToUpperCase(col.col))"
                                   :nudge-right="40" lazy transition="scale-transition" offset-y full-width max-width="290px" min-width="290px" >
                                   <v-text-field slot="activator" v-model="#(tbl.modelName)Query.begin#(firstCharToUpperCase(col.col))" label="#(col.note)查询开始日期" prepend-icon="event" readonly ></v-text-field>
                                   <v-date-picker v-model="#(tbl.modelName)Query.begin#(firstCharToUpperCase(col.col))" locale="zh-cn"  @input="$refs.#(col.col)QueryBeginDateMenu.save(#(tbl.modelName)Query.begin#(firstCharToUpperCase(col.col)))"></v-date-picker>
                             </v-menu>
                         </v-flex>
                         <v-flex xs12 sm3 md3 >
                              <v-menu ref="#(col.col)QueryEndDateMenu" :close-on-content-click="false" v-model="#(col.col)QueryEndDateMenu" :return-value.sync="#(tbl.modelName)Query.end#(firstCharToUpperCase(col.col))"
                                    :nudge-right="40" lazy transition="scale-transition" offset-y full-width max-width="290px" min-width="290px" >
                                    <v-text-field slot="activator" v-model="#(tbl.modelName)Query.end#(firstCharToUpperCase(col.col))" label="#(col.note)查询截至日期" prepend-icon="event" readonly ></v-text-field>
                                    <v-date-picker v-model="#(tbl.modelName)Query.end#(firstCharToUpperCase(col.col))" locale="zh-cn"  @input="$refs.#(col.col)QueryEndDateMenu.save(#(tbl.modelName)Query.end#(firstCharToUpperCase(col.col)))"></v-date-picker>
                              </v-menu>
                         </v-flex>
                   #end
                   #if((col.configJSON.inputType??''=='time')&&(col.configJSON.dateQuery??false))
                        <v-flex xs12 sm3 md3>
                            <v-menu ref="#(col.col)QueryBeginTimeMenu" :close-on-content-click="false" v-model="#(col.col)QueryBeginTimeMenu" :return-value.sync="#(tbl.modelName)Query.begin#(firstCharToUpperCase(col.col))"
                                                           :nudge-right="40" lazy transition="scale-transition" offset-y full-width max-width="290px" min-width="290px" >
                                <v-text-field slot="activator" v-model="#(tbl.modelName)Query.begin#(firstCharToUpperCase(col.col))" label="#(col.note)查询开始时间" prepend-icon="event" readonly ></v-text-field>
                                <v-time-picker v-model="#(tbl.modelName)Query.begin#(firstCharToUpperCase(col.col))" locale="zh-cn"  @input="$refs.#(col.col)QueryBeginTimeMenu.save(#(tbl.modelName)Query.begin#(firstCharToUpperCase(col.col)))"></v-time-picker>
                            </v-menu>
                        </v-flex>

                        <v-flex xs12 sm3 md3>
                            <v-menu ref="#(col.col)QueryEndTimeMenu" :close-on-content-click="false" v-model="#(col.col)QueryEndTimeMenu" :return-value.sync="#(tbl.modelName)Query.end#(firstCharToUpperCase(col.col))"
                                                                                  :nudge-right="40" lazy transition="scale-transition" offset-y full-width max-width="290px" min-width="290px" >
                                 <v-text-field slot="activator" v-model="#(tbl.modelName)Query.end#(firstCharToUpperCase(col.col))" label="#(col.note)查询截至时间" prepend-icon="event" readonly ></v-text-field>
                                 <v-time-picker v-model="#(tbl.modelName)Query.end#(firstCharToUpperCase(col.col))" locale="zh-cn"  @input="$refs.#(col.col)QueryBeginTimeMenu.save(#(tbl.modelName)Query.end#(firstCharToUpperCase(col.col)))"></v-time-picker>
                            </v-menu>
                        </v-flex>
                   #end
                   #if((col.configJSON.inputType??''=='select')&&(col.configJSON.equalQuery??false||col.configJSON.likeQuery??false))
                    <v-flex xs12 sm3 md3>
                        <v-select :items="#(col.col)SelectData" v-model="#(tbl.modelName)Query.#(col.col)" label="#genColLabel(col.note)"  item-value="value" item-text="text"></v-select>
                    </v-flex>
                   #end
                   #if((col.configJSON.inputType??''=='radio')&&(col.configJSON.equalQuery??false||col.configJSON.likeQuery??false))
                        <v-flex xs12 sm3 md3>
                        #genColLabel(col.note)<v-radio-group v-model="#(tbl.modelName)Query.#(col.col)" row> <v-radio v-for="n in #(col.col)RadioData" :key="n.value" :label="n.text" :value="n.value" ></v-radio></v-radio-group>

                   #end
                   #if((col.configJSON.inputType??''=='checkbox')&&(col.configJSON.equalQuery??false||col.configJSON.likeQuery??false))
                        <v-flex xs12 sm3 md3>
                        #genColLabel(col.note)<v-checkbox v-model="#(tbl.modelName)Query.#(col.col)" v-for="n in #(col.col)CheckboxData" :label="n.text" :value="n.value"></v-checkbox>
                        </v-flex>
                   #end
                   #if((col.configJSON.inputType??''=='switch')&&(col.configJSON.equalQuery??false||col.configJSON.likeQuery??false))
                        <v-flex xs12 sm3 md3>
                        <v-switch label="#genColLabel(col.note)" v-model="#(tbl.modelName)Query.#(col.col)"></v-switch>
                        </v-flex>
                   #end
                   #if((col.configJSON.inputType??''=='slider')&&(col.configJSON.equalQuery??false||col.configJSON.likeQuery??false))
                       <v-flex xs12 sm3 md3>
                        #(col.note)<v-slider v-model="#(tbl.modelName)Query.#(col.col)" thumb-label step="1" ticks></v-slider>
                       </v-flex>
                   #end
              #end
                        <v-flex xs12 sm3 md3>
                             <v-btn color="primary" class="white--text" @click="search()">
                                 搜索<v-icon>search</v-icon>
                             </v-btn>
                             <v-btn color="primary" class="white--text" @click="clearQueryParam()">
                                 清空<v-icon>clear</v-icon>
                             </v-btn>
                        </v-flex>
                      </v-layout>
              </v-container>


            <v-data-table :headers="#(tbl.modelName)Headers" :total-items="totalRow" :hide-actions="totalRow==0" :items="#(tbl.modelName)List" :rows-per-page-items="rowsPerPageItems" :pagination.sync="#(tbl.modelName)Query"  class="elevation-1" no-data-text="数据为空" no-results-text="没有筛选到正确的数据">
              <template slot="items" slot-scope="props">
                 #for(col:tbl.genCfgColList)
                 #if(col.configJSON.tableShow??false)
                    <td>
                    #if(col.configJSON.inputType??''=='select'||col.configJSON.inputType??''=='checkbox'||col.configJSON.inputType??''=='radio'||col.configJSON.inputType??''=='slider'||col.configJSON.inputType??''=='switch')
                               {{props.item.#(col.col)Str}}
                    #else if(col.configJSON.inputType??''=='date')
                               {{props.item.#(col.col) | formatDate}}
                    #else
                               {{props.item.#(col.col)}}
                    #end
                    </td>
                 #end
                 #end
                <td class=" layout px-0">
                  <v-btn icon class="mx-0" @click="edit(props.item)">
                    <v-icon color="teal">edit</v-icon>
                  </v-btn>
                  <v-btn icon class="mx-0" @click="del(props.item)">
                    <v-icon color="pink">delete</v-icon>
                  </v-btn>
                  <v-btn icon class="mx-0" @click="view(props.item)">
                      <v-icon color="teal">fas fa-eye</v-icon>
                  </v-btn>
                </td>
              </template>
          </v-data-table>
      </v-card>
</v-container>
</template>
<script>
import { mapState } from "vuex";
import Kit from "../../libs/kit.js";
#set(hasDate=false)
#for(col:tbl.genCfgColList)
    #if(col.configJSON.inputType??''=='date'&&!hasDate)
        var moment = require('moment');
        #set(hasDate=true)
    #end
#end
export default {
  data() {
    return {
      fValid: true,
      vo:{},
      rowsPerPageItems: [15],
      #(tbl.modelName)Query:{pn:1,sortBy:'',descending:''},//列表查询参数数据对象
      #(tbl.modelName)View:{},//查询详细数据对象
      loading: false,
      title: "新增#(tbl.note)",
      rules: Kit.inputRules,
      #(tbl.modelName)Headers: [
        #for(col:tbl.genCfgColList)
        #if(col.configJSON.tableShow??false)
        #if(col.configJSON.inputType??''=='select'||col.configJSON.inputType??''=='checkbox'||col.configJSON.inputType??''=='radio'||col.configJSON.inputType??''=='switch')
        {
          text: "#genColLabel(col.note)",
          #if(col.configJSON.isSort??false)sortable: true,#else sortable: false, #end
          value: "#(col.col)"
        },
        #else
        {
           text: "#(col.note)",
           #if(col.configJSON.isSort??false)sortable: true,#else sortable: false, #end
           value: "#(col.col)"
        },
        #end
        #end
        #end
        { text: "操作", sortable: false }
      ],
      dialog: false,
      viewDialog:false,
      opt: "",
      #for(col:tbl.genCfgColList)
          #if((col.configJSON.inputType??''=='select'))#(col.col)SelectData:[#genColNoteData(col.note)],#end
          #if((col.configJSON.inputType??''=='radio'))#(tbl.modelName)RadioData:[#genColNoteData(col.note)],#end
          #if((col.configJSON.inputType??''=='checkbox'))#(tbl.modelName)CheckboxData:[#genColNoteData(col.note)],#end
          #if((col.configJSON.inputType??''=='date')&&((col.configJSON.addShow??false)||(col.configJSON.editShow??false)))#(col.col)DateMenu:false, #end
          #if((col.configJSON.inputType??''=='time')&&((col.configJSON.addShow??false)||(col.configJSON.editShow??false)))#(col.col)TimeMenu:false, #end
          #if((col.configJSON.inputType??''=='date')&&((col.configJSON.dateQuery??false)))#(col.col)QueryBeginDateMenu:false,
          #(col.col)QueryEndDateMenu:false,#end
          #if((col.configJSON.inputType??''=='time')&&((col.configJSON.dateQuery??false)))#(col.col)QueryBeginTimeMenu:false,
          #(col.col)QueryEndTimeMenu:false,#end
      #end

    };
  },
  computed: {
    ...mapState({
      #(tbl.modelName): state => state.#(tbl.modelName).#(tbl.modelName),
      #(tbl.modelName)List: state => state.#(tbl.modelName).#(tbl.modelName)List,
      totalRow:state =>state.#(tbl.modelName).totalRow,
      pageNumber:state =>state.#(tbl.modelName).pageNumber,
      pageSize:state =>state.#(tbl.modelName).pageSize,
      totalPage:state =>state.#(tbl.modelName).totalPage,
    })
  },
  mounted() {
    this.#(tbl.modelName)Query["pn"] = this.#(tbl.modelName)Query.page;
    this.search();
    this.init();
  },
  methods: {
    init(){
        let vm=this;
        this.$store.dispatch("init_#(tbl.modelName)").then(res => {

        });
    },
    search() {
      this.$store.dispatch("page_#(tbl.modelName)",this.#(tbl.modelName)Query).catch(res=>{});
    },
    add() {
          this.loading=false;
          this.$refs.form.reset();
          this.vo={#if((col.configJSON.inputType??''=='date')&&((col.configJSON.addShow??false)||(col.configJSON.editShow??false)))#(col.col):moment(new Date).format("YYYY-MM-DD"), #end};
          this.opt = "add";
          this.title = "新增#(tbl.note)";
          this.dialog = true;
    },
    edit(#(tbl.modelName)) {
          this.loading=false;
          this.opt = "edit";
          this.vo=Object.assign({},#(tbl.modelName))
          this.dialog = true;
          this.title = "修改#(tbl.note)" ;
    },
    save() {
      let vm = this;
      if (this.$refs.form.validate()) {
        vm.loading = true;
        this.$store
          .dispatch("save_#(tbl.modelName)",vm.vo)
          .then(res => {
            vm.loading = false;
            if (res.resCode == "success") {
              vm.dialog = false;
              vm.search();
            }
          })
          .catch((res) => {
            vm.loading = false;
          });
      }
    },
    update() {
      let vm = this;

      if (this.$refs.form.validate()) {
        vm.loading = true;
        this.$store
          .dispatch("update_#(tbl.modelName)",vm.vo)
          .then(res => {
            vm.loading = false;
            if (res.resCode == "success") {
              vm.dialog = false;
              vm.search();
            }
          })
          .catch((res) => {
            vm.loading = false;
          });
      }
    },
    del(#(tbl.modelName)) {
      let vm = this;
      this.$APDialog.confirm(function(ret) {
        if (ret) {
        vm.loading=true
          vm.$store.dispatch("del_#(tbl.modelName)", { ids: #(tbl.modelName).id }).then(res => {
            if (res.resCode == "success") {
                vm.search();
            }
          }).catch((res) => {
                        vm.loading = false;
                      });
        } else {
        }
      });
    },
    view(#(tbl.modelName)){
        let vm = this;
        vm.viewDialog=true;
        vm.loading=true;
        vm.$store.dispatch("get_#(tbl.modelName)", { id: #(tbl.modelName).id }).then(res=>{
            vm.loading = false;
            vm.#(tbl.modelName)View=res;
        }).catch((res) => {
                      vm.loading = false;
                    });
    },
    clearQueryParam(){
    #for(col:tbl.genCfgColList)
      #if((col.configJSON.equalQuery??false||col.configJSON.likeQuery??false)&&col.tpe!='java.util.Date')
        this.#(tbl.modelName)Query['#(col.col)']='';
      #else if(col.configJSON.dateQuery??false)
        this.#(tbl.modelName)Query['begin#(firstCharToUpperCase(col.col))']='';
        this.#(tbl.modelName)Query['end#(firstCharToUpperCase(col.col))']='';
      #end
    #end
    this.search();
    }
  },
  filters: {
  #set(hasDate=false)
  #for(col:tbl.genCfgColList)
      #if(col.configJSON.inputType??''=='date'&&!hasDate)
          #set(hasDate=true)
          formatDate(time) {
              if(!!!time)return ''
              var date = new Date(time);
              return moment(date).format("YYYY-MM-DD hh:mm:ss");
          }

  #end#end
  },
    watch: {
        #(tbl.modelName)Query: {
          handler (val,oldVal) {
          if (this.#(tbl.modelName)Query.sortBy != ""||val.page!=oldVal.page) {
            this.search()
          }
          },
          deep: true
        }
      },
};
</script>
<style>
</style>
