package com.sc.ap.model;

import cn.hutool.core.collection.CollUtil;
import cn.hutool.core.util.ArrayUtil;
import cn.hutool.core.util.StrUtil;
import com.sc.ap.model.base.BaseGenCfgTbl;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class GenCfgTbl extends BaseGenCfgTbl<GenCfgTbl> {

	private String modelName;

	public static final GenCfgTbl dao = new GenCfgTbl().dao();
	private List<GenCfgCol> genCfgColList=new ArrayList<>();

	public void addGenCfgCol(GenCfgCol genCfgCol){
		genCfgColList.add(genCfgCol);
	}

	public GenCfgCol getGenCfgCol(int idx){
		return genCfgColList.get(idx);
	}

	public List<GenCfgCol> getGenCfgColList() {
		if(genCfgColList.isEmpty())
			return GenCfgCol.dao.findByPropEQ("tblId",getId());
		else
			return genCfgColList;
	}

	public void setGenCfgColList(List<GenCfgCol> genCfgColList) {
		this.genCfgColList = genCfgColList;
	}

	public String getModelName(){
		if(StrUtil.isBlank(modelName)) {
			String tblName = getTbl();
			String[] strings = tblName.split("_");
			StringBuilder stringBuilder = new StringBuilder();
			if (ArrayUtil.contains(prefixs(), strings[0])) {
				for (int i = 1; i < strings.length; i++) {
					stringBuilder.append(StrUtil.upperFirst(strings[i]));
				}
			} else {
				for (int i = 0; i < strings.length; i++) {
					stringBuilder.append(StrUtil.upperFirst(strings[i]));
				}
			}
			modelName = stringBuilder.toString();
		}
		return modelName;
	}

	public String[] prefixs(){
		GenSource genSource=GenSource.dao.findById(getGsId());
		String prefixs=genSource.getRemovePrefix();
		String[] strings=prefixs.split(",");
		return strings;
	}



}
